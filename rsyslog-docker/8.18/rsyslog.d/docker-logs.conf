#Template to build log path and log file name for test environemnt
template(name="PerHostDockerTestLogFileName" type="list") {
   constant(value="/var/log/remote/docker/test/")
   property(name="timegenerated" dateFormat="year")
   constant(value="-")
   property(name="timegenerated" dateFormat="month")
   constant(value="-")
   property(name="timegenerated" dateFormat="day")
   constant(value="/")
   property(name="syslogtag" securepath="replace"   \
   regex.expression="test/\\(.*\\)/\\(.*\\)\\[" regex.submatch="1")
   constant(value="/")
   property(name="syslogtag" securepath="replace"   \
   regex.expression="test/\\(.*\\)/\\(.*\\)\\[" regex.submatch="2")
   constant(value=".log")
}

#Template to build log path and log file name for sandbox environemnt
template(name="PerHostDockerSandboxLogFileName" type="list") {
   constant(value="/var/log/remote/docker/sandbox/")
   property(name="timegenerated" dateFormat="year")
   constant(value="-")
   property(name="timegenerated" dateFormat="month")
   constant(value="-")
   property(name="timegenerated" dateFormat="day")
   constant(value="/")
   property(name="syslogtag" securepath="replace"   \
   regex.expression="test/\\(.*\\)/\\(.*\\)\\[" regex.submatch="1")
   constant(value="/")
   property(name="syslogtag" securepath="replace"   \
   regex.expression="test/\\(.*\\)/\\(.*\\)\\[" regex.submatch="2")
   constant(value=".log")
}

#Template to build log path and log file name for production environemnt
template(name="PerHostDockerProdLogFileName" type="list") {
   constant(value="/var/log/remote/docker/prod/")
   property(name="timegenerated" dateFormat="year")
   constant(value="-")
   property(name="timegenerated" dateFormat="month")
   constant(value="-")
   property(name="timegenerated" dateFormat="day")
   constant(value="/")
   property(name="syslogtag" securepath="replace"   \
   regex.expression="test/\\(.*\\)/\\(.*\\)\\[" regex.submatch="1")
   constant(value="/")
   property(name="syslogtag" securepath="replace"   \
   regex.expression="test/\\(.*\\)/\\(.*\\)\\[" regex.submatch="2")
   constant(value=".log")
}



# Template to output message format
template(name="FileFormat" type="list") {
	property(name="syslogtag" securepath="replace"   \
	regex.expression="\\(.*\\)/\\(.*\\)/\\(.*\\)\\[" regex.submatch="3" position.from="1" position.to="32")
    constant(value=" ")
    property(name="hostname")
    constant(value=" ")
    property(name="msg" spifno1stsp="on" )
    property(name="msg" droplastlf="on" )
    constant(value="\n")
}


Ruleset(name="remote") {
   $FileCreateMode 0644
   $DirCreateMode 0755
   
   if $syslogtag contains 'test/' then {
		action(type="omfile" dynaFileCacheSize="1024" dynaFile="PerHostDockerTestLogFileName" template="FileFormat"
        flushOnTXEnd="off" asyncWriting="on" flushInterval="1" ioBufferSize="64k")
     }

   if $syslogtag contains 'sandbox/' then {
		action(type="omfile" dynaFileCacheSize="1024" dynaFile="PerHostDockerSandboxLogFileName" template="FileFormat"
        flushOnTXEnd="off" asyncWriting="on" flushInterval="1" ioBufferSize="64k")
     }

   if $syslogtag contains 'prod/' then {
		action(type="omfile" dynaFileCacheSize="1024" dynaFile="PerHostDockerProdLogFileName" template="FileFormat"
        flushOnTXEnd="off" asyncWriting="on" flushInterval="1" ioBufferSize="64k")
     }
	 
}


